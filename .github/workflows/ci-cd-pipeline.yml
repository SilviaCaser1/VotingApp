name: CI/CD Pipeline

# Se ejecuta cuando hay un push en la rama main
on:
  push:
    branches:
      - master

jobs:
  build-and-push-docker-images:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configurar Docker Buildx para construcción avanzada
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Paso 3: Instalar docker-compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          
      # Paso 4: Iniciar sesión en DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 5: Construir y etiquetar imágenes Docker
      - name: Build and tag Docker images
        run: |
          docker-compose build
          # Etiquetar imágenes para DockerHub
          docker tag example-voting-app-vote ${{ secrets.DOCKER_USERNAME }}/example-voting-app-vote:latest
          docker tag example-voting-app-result ${{ secrets.DOCKER_USERNAME }}/example-voting-app-result:latest
          docker tag example-voting-app-worker ${{ secrets.DOCKER_USERNAME }}/example-voting-app-worker:latest
          docker tag redis:alpine ${{ secrets.DOCKER_USERNAME }}/redis:alpine
          docker tag postgres:15-alpine ${{ secrets.DOCKER_USERNAME }}/postgres:15-alpine

      # Paso 6: Subir las imágenes a DockerHub
      - name: Push Docker images to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/example-voting-app-vote:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/example-voting-app-result:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/example-voting-app-worker:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/redis:alpine
          docker push ${{ secrets.DOCKER_USERNAME }}/postgres:15-alpine
