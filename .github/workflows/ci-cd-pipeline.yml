name: CI/CD Pipeline

# Se ejecuta cuando hay un push en la rama main
on:
  push:
    branches:
      - master
  pull_request:
     branches:
      - master      

jobs:
  build-and-push-docker-images:
    runs-on: ubuntu-latest  # Cambiado a Linux para evitar problemas de permisos #windows-latest

    steps:
      # Paso 1: Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r vote/requirements.txt

      - name: Run unit tests
        run: |
          cd vote
          python -m unittest discover -s . -p "test_*.py"
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Node.js dependencies for `result`
        run: |
          cd result
          npm ci
#          npm install

      - name: Run Node.js unit tests for `result`
        run: |
          cd result
          chmod +x ./node_modules/.bin/jest
          npx jest
#          npm test
          
      # Paso 2: Configurar Docker Buildx para construcción avanzada
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.20.0
          #disable: true  # Deshabilitar Buildx para evitar problemas de modo privilegiado
     
      # Paso 3: Instalar docker-compose
 #     - name: Install Docker Compose
 #       run: |
 #         sudo apt-get update
 #         sudo apt-get install -y docker-compose
          
      # Paso 4: Iniciar sesión en DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 5: Construir y etiquetar imágenes Docker
 #     - name: Build Docker images
 #       run: |
 #         docker-compose build || exit 1
          
 #     - name: Build and tag Docker images
 #       run: |
          # Etiquetar imágenes para DockerHub
 #         docker tag example-voting-app-vote:latest ${{ secrets.DOCKER_USERNAME }}/example-voting-app-vote:latest
 #         docker tag example-voting-app-result:latest ${{ secrets.DOCKER_USERNAME }}/example-voting-app-result:latest
 #         docker tag example-voting-app-worker:latest ${{ secrets.DOCKER_USERNAME }}/example-voting-app-worker:latest
      - name: Build and push Docker images using Docker Compose
        run: |
         docker-compose build
         docker-compose push
      # Paso 6: Subir las imágenes a DockerHub
 #     - name: Push Docker images to DockerHub
 #       run: |
      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/example-voting-app-vote:latest
            ${{ secrets.DOCKER_USERNAME }}/example-voting-app-result:latest
            ${{ secrets.DOCKER_USERNAME }}/example-voting-app-worker:latest        
 #         docker push ${{ secrets.DOCKER_USERNAME }}/example-voting-app-vote:latest
 #         docker push ${{ secrets.DOCKER_USERNAME }}/example-voting-app-result:latest
 #         docker push ${{ secrets.DOCKER_USERNAME }}/example-voting-app-worker:latest
